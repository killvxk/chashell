// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chacomm.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Clientguid []byte `protobuf:"bytes,1,opt,name=clientguid,proto3" json:"clientguid,omitempty"`
	// Types that are valid to be assigned to Packet:
	//	*Message_Chunkstart
	//	*Message_Chunkdata
	//	*Message_Pollquery
	//	*Message_Infopacket
	Packet               isMessage_Packet `protobuf_oneof:"packet"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d953d7eba1c19408, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetClientguid() []byte {
	if m != nil {
		return m.Clientguid
	}
	return nil
}

type isMessage_Packet interface {
	isMessage_Packet()
}

type Message_Chunkstart struct {
	Chunkstart *ChunkStart `protobuf:"bytes,2,opt,name=chunkstart,proto3,oneof"`
}

type Message_Chunkdata struct {
	Chunkdata *ChunkData `protobuf:"bytes,3,opt,name=chunkdata,proto3,oneof"`
}

type Message_Pollquery struct {
	Pollquery *PollQuery `protobuf:"bytes,4,opt,name=pollquery,proto3,oneof"`
}

type Message_Infopacket struct {
	Infopacket *InfoPacket `protobuf:"bytes,5,opt,name=infopacket,proto3,oneof"`
}

func (*Message_Chunkstart) isMessage_Packet() {}

func (*Message_Chunkdata) isMessage_Packet() {}

func (*Message_Pollquery) isMessage_Packet() {}

func (*Message_Infopacket) isMessage_Packet() {}

func (m *Message) GetPacket() isMessage_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *Message) GetChunkstart() *ChunkStart {
	if x, ok := m.GetPacket().(*Message_Chunkstart); ok {
		return x.Chunkstart
	}
	return nil
}

func (m *Message) GetChunkdata() *ChunkData {
	if x, ok := m.GetPacket().(*Message_Chunkdata); ok {
		return x.Chunkdata
	}
	return nil
}

func (m *Message) GetPollquery() *PollQuery {
	if x, ok := m.GetPacket().(*Message_Pollquery); ok {
		return x.Pollquery
	}
	return nil
}

func (m *Message) GetInfopacket() *InfoPacket {
	if x, ok := m.GetPacket().(*Message_Infopacket); ok {
		return x.Infopacket
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Chunkstart)(nil),
		(*Message_Chunkdata)(nil),
		(*Message_Pollquery)(nil),
		(*Message_Infopacket)(nil),
	}
}

type ChunkStart struct {
	Chunkid              int32    `protobuf:"varint,1,opt,name=chunkid,proto3" json:"chunkid,omitempty"`
	Chunksize            int32    `protobuf:"varint,2,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkStart) Reset()         { *m = ChunkStart{} }
func (m *ChunkStart) String() string { return proto.CompactTextString(m) }
func (*ChunkStart) ProtoMessage()    {}
func (*ChunkStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_d953d7eba1c19408, []int{1}
}

func (m *ChunkStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkStart.Unmarshal(m, b)
}
func (m *ChunkStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkStart.Marshal(b, m, deterministic)
}
func (m *ChunkStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkStart.Merge(m, src)
}
func (m *ChunkStart) XXX_Size() int {
	return xxx_messageInfo_ChunkStart.Size(m)
}
func (m *ChunkStart) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkStart.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkStart proto.InternalMessageInfo

func (m *ChunkStart) GetChunkid() int32 {
	if m != nil {
		return m.Chunkid
	}
	return 0
}

func (m *ChunkStart) GetChunksize() int32 {
	if m != nil {
		return m.Chunksize
	}
	return 0
}

type ChunkData struct {
	Chunkid              int32    `protobuf:"varint,1,opt,name=chunkid,proto3" json:"chunkid,omitempty"`
	Chunknum             int32    `protobuf:"varint,2,opt,name=chunknum,proto3" json:"chunknum,omitempty"`
	Packet               []byte   `protobuf:"bytes,3,opt,name=packet,proto3" json:"packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkData) Reset()         { *m = ChunkData{} }
func (m *ChunkData) String() string { return proto.CompactTextString(m) }
func (*ChunkData) ProtoMessage()    {}
func (*ChunkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d953d7eba1c19408, []int{2}
}

func (m *ChunkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkData.Unmarshal(m, b)
}
func (m *ChunkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkData.Marshal(b, m, deterministic)
}
func (m *ChunkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkData.Merge(m, src)
}
func (m *ChunkData) XXX_Size() int {
	return xxx_messageInfo_ChunkData.Size(m)
}
func (m *ChunkData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkData.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkData proto.InternalMessageInfo

func (m *ChunkData) GetChunkid() int32 {
	if m != nil {
		return m.Chunkid
	}
	return 0
}

func (m *ChunkData) GetChunknum() int32 {
	if m != nil {
		return m.Chunknum
	}
	return 0
}

func (m *ChunkData) GetPacket() []byte {
	if m != nil {
		return m.Packet
	}
	return nil
}

type PollQuery struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollQuery) Reset()         { *m = PollQuery{} }
func (m *PollQuery) String() string { return proto.CompactTextString(m) }
func (*PollQuery) ProtoMessage()    {}
func (*PollQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_d953d7eba1c19408, []int{3}
}

func (m *PollQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollQuery.Unmarshal(m, b)
}
func (m *PollQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollQuery.Marshal(b, m, deterministic)
}
func (m *PollQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollQuery.Merge(m, src)
}
func (m *PollQuery) XXX_Size() int {
	return xxx_messageInfo_PollQuery.Size(m)
}
func (m *PollQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_PollQuery.DiscardUnknown(m)
}

var xxx_messageInfo_PollQuery proto.InternalMessageInfo

type InfoPacket struct {
	Hostname             []byte   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoPacket) Reset()         { *m = InfoPacket{} }
func (m *InfoPacket) String() string { return proto.CompactTextString(m) }
func (*InfoPacket) ProtoMessage()    {}
func (*InfoPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_d953d7eba1c19408, []int{4}
}

func (m *InfoPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoPacket.Unmarshal(m, b)
}
func (m *InfoPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoPacket.Marshal(b, m, deterministic)
}
func (m *InfoPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoPacket.Merge(m, src)
}
func (m *InfoPacket) XXX_Size() int {
	return xxx_messageInfo_InfoPacket.Size(m)
}
func (m *InfoPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoPacket.DiscardUnknown(m)
}

var xxx_messageInfo_InfoPacket proto.InternalMessageInfo

func (m *InfoPacket) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterType((*ChunkStart)(nil), "protocol.ChunkStart")
	proto.RegisterType((*ChunkData)(nil), "protocol.ChunkData")
	proto.RegisterType((*PollQuery)(nil), "protocol.PollQuery")
	proto.RegisterType((*InfoPacket)(nil), "protocol.InfoPacket")
}

func init() { proto.RegisterFile("chacomm.proto", fileDescriptor_d953d7eba1c19408) }

var fileDescriptor_d953d7eba1c19408 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x6c, 0x0b, 0x69, 0x93, 0xd7, 0xb2, 0x18, 0x84, 0x2c, 0x84, 0x50, 0x95, 0x29, 0x53, 0x06,
	0x2a, 0xf1, 0x01, 0xd0, 0xa1, 0x0c, 0x48, 0xc5, 0x4c, 0x8c, 0xc6, 0x75, 0x9b, 0xa8, 0x8e, 0x1d,
	0x62, 0x67, 0x80, 0x7f, 0xe0, 0x9f, 0x91, 0x4d, 0x62, 0x57, 0x19, 0x98, 0xe2, 0xf7, 0xde, 0xdd,
	0xe9, 0xee, 0x02, 0x17, 0xac, 0xa0, 0x4c, 0x55, 0x55, 0x5e, 0x37, 0xca, 0x28, 0x14, 0xbb, 0x0f,
	0x53, 0x22, 0xfd, 0x99, 0xc0, 0xec, 0x85, 0x6b, 0x4d, 0x0f, 0x1c, 0xdd, 0x01, 0x30, 0x51, 0x72,
	0x69, 0x0e, 0x6d, 0xb9, 0xc3, 0xe3, 0xe5, 0x38, 0x5b, 0x90, 0x93, 0x0d, 0x7a, 0x00, 0x60, 0x45,
	0x2b, 0x8f, 0xda, 0xd0, 0xc6, 0xe0, 0xc9, 0x72, 0x9c, 0xcd, 0xef, 0xaf, 0xf2, 0x5e, 0x2a, 0x7f,
	0xb2, 0xb7, 0x37, 0x7b, 0xdb, 0x8c, 0xc8, 0x09, 0x12, 0xad, 0x20, 0x71, 0xd3, 0x8e, 0x1a, 0x8a,
	0xcf, 0x1c, 0xed, 0x72, 0x40, 0x5b, 0x53, 0x43, 0x37, 0x23, 0x12, 0x70, 0x96, 0x54, 0x2b, 0x21,
	0x3e, 0x5b, 0xde, 0x7c, 0xe1, 0xf3, 0x21, 0x69, 0xab, 0x84, 0x78, 0xb5, 0x27, 0x4b, 0xf2, 0x38,
	0xeb, 0xb0, 0x94, 0x7b, 0x55, 0x53, 0x76, 0xe4, 0x06, 0x47, 0x43, 0x87, 0xcf, 0x72, 0xaf, 0xb6,
	0xee, 0x66, 0x1d, 0x06, 0xe4, 0x63, 0x0c, 0xd3, 0xbf, 0x57, 0xba, 0x06, 0x08, 0x39, 0x10, 0x86,
	0x99, 0x73, 0xd4, 0xd5, 0x11, 0x91, 0x7e, 0x44, 0xb7, 0x5d, 0x26, 0x5d, 0x7e, 0x73, 0x57, 0x45,
	0x44, 0xc2, 0x22, 0x7d, 0x87, 0xc4, 0xc7, 0xfa, 0x47, 0xe4, 0x06, 0x62, 0xf7, 0x94, 0x6d, 0xd5,
	0x69, 0xf8, 0x19, 0x5d, 0xf7, 0x96, 0x5c, 0x63, 0x0b, 0xd2, 0x1b, 0x9c, 0x43, 0xe2, 0xc3, 0xa7,
	0x19, 0x40, 0xc8, 0x64, 0xe5, 0x0a, 0xa5, 0x8d, 0xa4, 0x15, 0xef, 0xfe, 0x9e, 0x9f, 0x3f, 0xa6,
	0xae, 0x84, 0xd5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x3a, 0xe2, 0x6d, 0x09, 0x02, 0x00,
	0x00,
}
